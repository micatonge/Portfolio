[{"/Users/mica/Portfolio/my-app/src/index.js":"1","/Users/mica/Portfolio/my-app/src/Homepage.js":"2","/Users/mica/Portfolio/my-app/src/components/Contact.js":"3","/Users/mica/Portfolio/my-app/src/components/About.js":"4","/Users/mica/Portfolio/my-app/src/components/Projects.js":"5","/Users/mica/Portfolio/my-app/src/components/Resume.js":"6","/Users/mica/Portfolio/my-app/src/imageList.js":"7","/Users/mica/Portfolio/my-app/src/breadc.js":"8","/Users/mica/Portfolio/my-app/src/list.js":"9","/Users/mica/Portfolio/my-app/src/components/header.js":"10"},{"size":1340,"mtime":1692121452276,"results":"11","hashOfConfig":"12"},{"size":3805,"mtime":1691697702116,"results":"13","hashOfConfig":"12"},{"size":156,"mtime":1691694534663,"results":"14","hashOfConfig":"12"},{"size":152,"mtime":1691694510021,"results":"15","hashOfConfig":"12"},{"size":167,"mtime":1691695563991,"results":"16","hashOfConfig":"12"},{"size":154,"mtime":1691694747981,"results":"17","hashOfConfig":"12"},{"size":1973,"mtime":1689741685594,"results":"18","hashOfConfig":"12"},{"size":1592,"mtime":1689742118467,"results":"19","hashOfConfig":"12"},{"size":6638,"mtime":1692199161954,"results":"20","hashOfConfig":"12"},{"size":2470,"mtime":1691794875621,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7kgwid",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mica/Portfolio/my-app/src/index.js",[],[],"/Users/mica/Portfolio/my-app/src/Homepage.js",[],[],"/Users/mica/Portfolio/my-app/src/components/Contact.js",[],[],"/Users/mica/Portfolio/my-app/src/components/About.js",[],[],"/Users/mica/Portfolio/my-app/src/components/Projects.js",[],[],"/Users/mica/Portfolio/my-app/src/components/Resume.js",[],[],"/Users/mica/Portfolio/my-app/src/imageList.js",[],[],"/Users/mica/Portfolio/my-app/src/breadc.js",[],[],"/Users/mica/Portfolio/my-app/src/list.js",["53","54","55"],[],"// import React, { useState } from \"react\";\n// import { Breadcrumbs, Popover, List, ListItem, ListItemText } from \"@mui/material\";\n// import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n// import Chip from '@mui/material/Chip';\n// import { emphasize, styled } from '@mui/material/styles';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tooltip from '@mui/material/Tooltip';\n\n\nimport React, { useState } from \"react\";\nimport { Breadcrumbs, List, ListItem, ListItemText } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Chip from '@mui/material/Chip';\nimport { emphasize, styled } from '@mui/material/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    bottom: {\n        marginTop: 15,\n        marginLeft: 115,\n        fontFamily: 'Montserrat',\n      },\n      popoverContent: {\n        fontFamily: 'Montserrat',\n        maxWidth: '200px', // Adjust the width as needed\n        padding: 5,\n        maxHeight: '200px', // Adjust the max height of the popover content\n        overflowY: 'auto', // Add vertical scrolling if content exceeds max height\n        backgroundColor: theme.palette.grey[100], // Background color\n        borderRadius: theme.shape.borderRadius, // Border radius\n        boxShadow: theme.shadows[1], // Add a subtle shadow\n      },\n      pt2: {\n        marginTop: 15,\n\n      },\n      p: {\n        paddingRight: 15,\n\n      },\n}));\n\nconst StyledBreadcrumb = styled(Chip)(({ theme }) => {\n    const backgroundColor =\n      theme.palette.mode === 'light'\n        ? theme.palette.grey[100]\n        : theme.palette.grey[800];\n    return {\n      backgroundColor,\n      height: theme.spacing(3),\n      \n      color: theme.palette.text.primary,\n      fontWeight: theme.typography.fontWeightRegular,\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.06),\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1],\n        backgroundColor: emphasize(backgroundColor, 0.12),\n      },\n      '&.differentColor': {\n        backgroundColor: 'green',\n        color: 'white',\n        '&:hover, &:focus': {\n          backgroundColor: 'darkgreen',\n        },\n        '& .MuiSvgIcon-root': {\n          fill: 'white',\n      },\n    },\n      '&.differentColor2': {\n        backgroundColor: 'orange', // Your desired different color\n        color: 'white', // Text color for the different color breadcrumb\n        '&:hover, &:focus': {\n          backgroundColor: 'darkorange', // Change background color on hover/focus\n        },\n        '& .MuiSvgIcon-root': {\n          fill: 'white', // Icon color for the different color breadcrumb\n        },\n      },\n    };\n  }); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n  \n  \n  const Listt = () => {\n\n    const classes = useStyles();\n\n    const [isListVisible, setIsListVisible] = useState(false);\n\n    const handleToggleList = () => {\n      setIsListVisible(!isListVisible);\n    };\n  \n    return (\n      <div className={classes.bottom}>\n        <Breadcrumbs aria-label=\"breadcrumb\">\n        <StyledBreadcrumb component=\"a\" href=\"#\" label=\"Javascript\" />\n           <StyledBreadcrumb component=\"a\" href=\"#\" label=\"Python\" />\n         <StyledBreadcrumb component=\"a\" href=\"#\" label=\"C#\" />\n         <StyledBreadcrumb component=\"a\" href=\"#\" label=\"Databases\" />\n     <StyledBreadcrumb component=\"a\" href=\"#\" label=\"React\" />\n       <StyledBreadcrumb component=\"a\" href=\"#\" label=\"Angular\" />\n       <Tooltip title=\"Click me!\">\n          <StyledBreadcrumb\n            label=\"Other skills\"\n            className=\"differentColor\"\n            endIcon={<ExpandMoreIcon />}\n            onClick={handleToggleList}\n          />\n          </Tooltip>\n        </Breadcrumbs>\n\n      <div className={classes.pt2}>\n        {isListVisible && (\n                  <Breadcrumbs aria-label=\"breadcrumb\">\n                  <StyledBreadcrumb component=\"a\" href=\"#\" label=\"Figma\"  className=\"differentColor2\"\n />\n                <StyledBreadcrumb component=\"a\" href=\"#\" label=\"AWS Cloud\"             className=\"differentColor2\"\n />\n                <StyledBreadcrumb component=\"a\" href=\"#\" label=\"Agile Flow\"              className=\"differentColor2\"\n/>\n                <StyledBreadcrumb component=\"a\" href=\"#\" label=\"Marketing\"              className=\"differentColor2\"\n/>\n            <StyledBreadcrumb component=\"a\" href=\"#\" label=\"Adobe Photoshop\"              className=\"differentColor2\"\n/>\n              <StyledBreadcrumb component=\"a\" href=\"#\" label=\"SEO Strategies\"             className=\"differentColor2\"\n />\n </Breadcrumbs>\n        )}\n        </div>\n      </div>\n    );\n  };\n  \n  export default Listt;\n  \n\n// const MoreSkillsList = ({ onClose }) => {\n//   const skills = [\"Node.js\", \"Java\", \"HTML/CSS\", \"Design\"];\n\n//   return (\n//     <List>\n//       {skills.map((skill) => (\n//         <ListItem button key={skill}>\n//           <ListItemText primary={skill} />\n//         </ListItem>\n//       ))}\n//     </List>\n//   );\n// };\n\n// const Listt = () => {\n\n//   const classes = useStyles();\n\n//   const [anchorEl, setAnchorEl] = useState(null);\n\n//   const handleClick = (event) => {\n//     setAnchorEl(event.currentTarget);\n//   };\n\n//   const handleClose = () => {\n//     setAnchorEl(null);\n//   };\n\n//   const open = Boolean(anchorEl);\n\n//   return (\n//     <div className={classes.bottom}>\n//       <Breadcrumbs aria-label=\"breadcrumb\">\n//         <StyledBreadcrumb component=\"a\" href=\"#\" label=\"Python\" />\n//         <StyledBreadcrumb component=\"a\" href=\"#\" label=\"C#\" />\n//         <StyledBreadcrumb component=\"a\" href=\"#\" label=\"Databases\" />\n//         <StyledBreadcrumb component=\"a\" href=\"#\" label=\"React\" />\n//         <StyledBreadcrumb component=\"a\" href=\"#\" label=\"Angular\" />\n//         <StyledBreadcrumb\n//           label=\"Other skills\"\n//           className=\"differentColor\"          deleteIcon={<ExpandMoreIcon />}\n//           onDelete={handleClick}\n//         />\n//       </Breadcrumbs>\n\n//       {/* Popover with the expanded skills list */}\n//       <Popover\n//         className={classes.pop}\n//         open={open}\n//         anchorEl={anchorEl}\n//         onClose={handleClose}\n//         anchorOrigin={{\n//             vertical: \"bottom\",\n//             horizontal: \"center\",\n//           }}\n//           transformOrigin={{\n//             vertical: \"top\",\n//             horizontal: \"center\",\n//           }}\n//       >\n//                <div className={classes.popoverContent}>\n//           <MoreSkillsList onClose={handleClose} />\n//         </div>\n//       </Popover>\n//     </div>\n//   );\n// };\n\n// export default Listt;\n","/Users/mica/Portfolio/my-app/src/components/header.js",[],[],{"ruleId":"56","severity":1,"message":"57","line":11,"column":23,"nodeType":"58","messageId":"59","endLine":11,"endColumn":27},{"ruleId":"56","severity":1,"message":"60","line":11,"column":29,"nodeType":"58","messageId":"59","endLine":11,"endColumn":37},{"ruleId":"56","severity":1,"message":"61","line":11,"column":39,"nodeType":"58","messageId":"59","endLine":11,"endColumn":51},"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'ListItem' is defined but never used.","'ListItemText' is defined but never used."]