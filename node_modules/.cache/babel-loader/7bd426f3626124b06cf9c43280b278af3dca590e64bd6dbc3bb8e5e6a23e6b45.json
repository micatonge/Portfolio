{"ast":null,"code":"var _jsxFileName = \"/Users/mica/Portfolio/my-app/src/list.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Breadcrumbs, List, ListItem, ListItemText } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Chip from '@mui/material/Chip';\nimport { emphasize, styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  bottom: {\n    marginTop: 15,\n    marginLeft: 115,\n    fontFamily: 'Montserrat'\n  },\n  popoverContent: {\n    fontFamily: 'Montserrat',\n    maxWidth: '200px',\n    // Adjust the width as needed\n    padding: 5,\n    maxHeight: '200px',\n    // Adjust the max height of the popover content\n    overflowY: 'auto',\n    // Add vertical scrolling if content exceeds max height\n    backgroundColor: theme.palette.grey[100],\n    // Background color\n    borderRadius: theme.shape.borderRadius,\n    // Border radius\n    boxShadow: theme.shadows[1] // Add a subtle shadow\n  },\n\n  popoverText: {\n    fontWeight: theme.typography.fontWeightRegular,\n    color: theme.palette.text.primary\n  }\n}));\nconst StyledBreadcrumb = styled(Chip)(_ref => {\n  let {\n    theme\n  } = _ref;\n  const backgroundColor = theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[800];\n  return {\n    backgroundColor,\n    height: theme.spacing(3),\n    color: theme.palette.text.primary,\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: emphasize(backgroundColor, 0.06)\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(backgroundColor, 0.12)\n    },\n    '&.differentColor': {\n      backgroundColor: 'green',\n      // Your desired different color\n      color: 'white',\n      // Text color for the different color breadcrumb\n      '&:hover, &:focus': {\n        backgroundColor: 'darkgreen' // Change background color on hover/focus\n      },\n\n      '& .MuiSvgIcon-root': {\n        fill: 'white' // Icon color for the different color breadcrumb\n      }\n    }\n  };\n}); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n_c = StyledBreadcrumb;\nconst Listt = () => {\n  _s();\n  const [isListVisible, setIsListVisible] = useState(false);\n  const handleToggleList = () => {\n    setIsListVisible(!isListVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(StyledBreadcrumb, {\n        label: \"Other skills\",\n        className: \"differentColor\",\n        deleteIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this),\n        onClick: handleToggleList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), isListVisible && /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Node.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Java\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"HTML/CSS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Design\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n};\n_s(Listt, \"CFFULlHW06ZmzRFvwuDzWwlItYE=\");\n_c2 = Listt;\nexport default Listt;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledBreadcrumb\");\n$RefreshReg$(_c2, \"Listt\");","map":{"version":3,"names":["React","useState","Breadcrumbs","List","ListItem","ListItemText","ExpandMoreIcon","Chip","emphasize","styled","jsxDEV","_jsxDEV","useStyles","makeStyles","theme","bottom","marginTop","marginLeft","fontFamily","popoverContent","maxWidth","padding","maxHeight","overflowY","backgroundColor","palette","grey","borderRadius","shape","boxShadow","shadows","popoverText","fontWeight","typography","fontWeightRegular","color","text","primary","StyledBreadcrumb","_ref","mode","height","spacing","fill","_c","Listt","_s","isListVisible","setIsListVisible","handleToggleList","children","label","className","deleteIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c2","$RefreshReg$"],"sources":["/Users/mica/Portfolio/my-app/src/list.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Breadcrumbs, List, ListItem, ListItemText } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Chip from '@mui/material/Chip';\nimport { emphasize, styled } from '@mui/material/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    bottom: {\n        marginTop: 15,\n        marginLeft: 115,\n        fontFamily: 'Montserrat',\n      },\n      popoverContent: {\n        fontFamily: 'Montserrat',\n        maxWidth: '200px', // Adjust the width as needed\n        padding: 5,\n        maxHeight: '200px', // Adjust the max height of the popover content\n        overflowY: 'auto', // Add vertical scrolling if content exceeds max height\n        backgroundColor: theme.palette.grey[100], // Background color\n        borderRadius: theme.shape.borderRadius, // Border radius\n        boxShadow: theme.shadows[1], // Add a subtle shadow\n      },\n      popoverText: {\n        fontWeight: theme.typography.fontWeightRegular,\n        color: theme.palette.text.primary,\n      },\n}));\n\nconst StyledBreadcrumb = styled(Chip)(({ theme }) => {\n    const backgroundColor =\n      theme.palette.mode === 'light'\n        ? theme.palette.grey[100]\n        : theme.palette.grey[800];\n    return {\n      backgroundColor,\n      height: theme.spacing(3),\n      \n      color: theme.palette.text.primary,\n      fontWeight: theme.typography.fontWeightRegular,\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.06),\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1],\n        backgroundColor: emphasize(backgroundColor, 0.12),\n      },\n      '&.differentColor': {\n        backgroundColor: 'green', // Your desired different color\n        color: 'white', // Text color for the different color breadcrumb\n        '&:hover, &:focus': {\n          backgroundColor: 'darkgreen', // Change background color on hover/focus\n        },\n        '& .MuiSvgIcon-root': {\n          fill: 'white', // Icon color for the different color breadcrumb\n        },\n      },\n    };\n  }); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n  \n  \n \n  \n  const Listt = () => {\n    const [isListVisible, setIsListVisible] = useState(false);\n  \n    const handleToggleList = () => {\n      setIsListVisible(!isListVisible);\n    };\n  \n    return (\n      <div>\n        <Breadcrumbs aria-label=\"breadcrumb\">\n          {/* ... Your StyledBreadcrumbs */}\n          <StyledBreadcrumb\n            label=\"Other skills\"\n            className=\"differentColor\"\n            deleteIcon={<ExpandMoreIcon />}\n            onClick={handleToggleList}\n          />\n        </Breadcrumbs>\n  \n        {isListVisible && (\n          <List>\n            <ListItem>\n              <ListItemText primary=\"Node.js\" />\n            </ListItem>\n            <ListItem>\n              <ListItemText primary=\"Java\" />\n            </ListItem>\n            <ListItem>\n              <ListItemText primary=\"HTML/CSS\" />\n            </ListItem>\n            <ListItem>\n              <ListItemText primary=\"Design\" />\n            </ListItem>\n          </List>\n        )}\n      </div>\n    );\n  };\n  \n  export default Listt;\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}